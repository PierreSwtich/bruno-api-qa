meta {
  name: Invalid Data
  type: http
  seq: 4
}

post {
  url: {{baseURL}}/movies
  body: json
  auth: none
}

assert {
  req.body.title: isDefined
  req.body.lenghtInMinutes: isDefined
}

script:pre-request {
    const { faker } = require('@faker-js/faker')
  
    const randomTitle = faker.word.words({ count: { min: 1, max: 5 } })
    const randomNegativeDuration = faker.number.int({ min: -500, max: -1 })
    const existingMovie = bru.getEnvVar("newMovieId")
  
    req.setBody({
        id: existingMovie,
        title: randomTitle,
        lenghtInMinutes: randomNegativeDuration
    })
}

tests {
    test('Expect status code to be 500', function() {
        expect(res.status).to.equals(500)
    })

    test('Expect response time to be less than 500ms', function() {
        expect(res.responseTime).to.be.below(500)
    })

    test('Expect response error to have a clear information', function() {
        expect(res.body).to.include('Error: Insert failed, duplicate id')
    })
}
